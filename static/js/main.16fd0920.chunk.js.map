{"version":3,"sources":["reducers/gameReducer.js","reducers/modalReducer.js","reducers/playersReducer.js","reducers/reducers.js","components/Dealer.js","components/Player1.js","components/Player1ScoreCard.js","components/Player2.js","components/Player2ScoreCard.js","actions/action.js","components/Modal.js","components/Game.js","actions/asynactions.js","components/App.js","index.js"],"names":["initState","deckId","inProgress","dealerCard","value","image","score","inProp","player1Card","streak","player2Card","modalIsOpen","current","currentPlayerCount","currentPlayer","nonCurrentPlayer","combineReducers","game","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","payload","otherload","cardValue","parseInt","playerValue","playerCardValue","modal","players","Dealer","_this$props$dealerCar","this","props","react_default","a","createElement","className","Transition","timeout","in","appear","id","concat","src","alt","Component","Player1","_this$props$player1Ca","Player1ScoreCard","_props$player1Card","scoreCard","_this$props$player2Ca","Player2ScoreCard","_props$player2Card","closeModal","connect","handleSwitchPlayer","lib_default","isOpen","ariaHideApp","onClick","Game","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","fetchNewDeck","checkThreeRow","fetchCards","gameId","arg","handleThreeInRoW","dealerValue","showDealerCard","handleDraw","handleWonHand","handleLostHand","wonHand","lostHand","load","switchPlayer","switchCounter","showModal","_this2","components_Player1ScoreCard","components_Dealer","components_Player2ScoreCard","dealCards","components_Player1","handleLowChoice","handleHighChoice","Player2","Modal","_ref3","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","wrap","_context2","prev","next","axios","get","then","cards","data","stop","_x2","apply","defaultPlayer","_ref","_callee","_context","_ref2","deck_id","_x","payload1","App","components_Game","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"6NACMA,EAAY,CAChBC,OAAQ,KACRC,YAAY,EACZC,WAAY,CACVC,MAAO,GACPC,MAAO,GACPC,MAAO,EACPC,QAAQ,GAEVC,YAAa,CACXJ,MAAO,GACPC,MAAO,GACPC,MAAO,EACPG,OAAQ,GAEVC,YAAa,CACXN,MAAO,GACPC,MAAO,GACPC,MAAO,EACPG,OAAQ,ICpBNT,EAAY,CAChBW,aAAa,GCDTX,EAAY,CAChBY,QAAS,CACPC,mBAAoB,EACpBC,cAAe,cACfC,iBAAkB,gBCCPC,cAAgB,CAC7BC,KHkBa,WAA+B,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBnB,EAAWsB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQC,EAAOC,MACb,IAAK,iBAEH,OADAC,QAAQC,IAAI,oBACLC,OAAAC,EAAA,EAAAD,CAAA,GACFR,EADL,CAEEjB,OAAQqB,EAAOM,QACfzB,WAAY,CACVC,MAAOkB,EAAOM,QAAQ,GAAGxB,MACzBC,MAAOiB,EAAOM,QAAQ,GAAGvB,OAG3BG,YACuB,gBAArBc,EAAOO,UAAPH,OAAAC,EAAA,EAAAD,CAAA,GAESR,EAAMV,YAFf,CAGMJ,MAAOkB,EAAOM,QAAQ,GAAGxB,MACzBC,MAAOiB,EAAOM,QAAQ,GAAGvB,QAJ/BqB,OAAAC,EAAA,EAAAD,CAAA,GAMS1B,EAAUQ,aAErBE,YACuB,gBAArBY,EAAOO,UAAPH,OAAAC,EAAA,EAAAD,CAAA,GAESR,EAAMR,YAFf,CAGMN,MAAOkB,EAAOM,QAAQ,GAAGxB,MACzBC,MAAOiB,EAAOM,QAAQ,GAAGvB,QAJ/BqB,OAAAC,EAAA,EAAAD,CAAA,GAMS1B,EAAUU,eAGzB,IAAK,cACHc,QAAQC,IAAI,eADd,IAEQrB,EAAUkB,EAAOM,QAAQ,GAAzBxB,MACF0B,EACQ,SAAV1B,GACU,UAAVA,GACU,SAAVA,GACU,QAAVA,EACI,GACA2B,SAAS3B,GAGF4B,EAAgBV,EAAOM,QAAQ,GAAtCxB,MACF6B,EACc,SAAhBD,GACgB,UAAhBA,GACgB,SAAhBA,GACgB,QAAhBA,EACI,GACAD,SAASC,GAEf,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFR,EADL,CAEEhB,YAAY,EACZC,WAAWuB,OAAAC,EAAA,EAAAD,CAAA,GACNR,EAAMf,WADD,CAERC,MAAO0B,EACPzB,MAAOiB,EAAOM,QAAQ,GAAGvB,MACzBE,QAAQ,IAGVC,YACuB,gBAArBc,EAAOO,UAAPH,OAAAC,EAAA,EAAAD,CAAA,GAESR,EAAMV,YAFf,CAGMJ,MAAO6B,EACP5B,MAAOiB,EAAOM,QAAQ,GAAGvB,QAE3B,GAENK,YACuB,gBAArBY,EAAOO,UAAPH,OAAAC,EAAA,EAAAD,CAAA,GAESR,EAAMR,YAFf,CAGMN,MAAO6B,EACP5B,MAAOiB,EAAOM,QAAQ,GAAGvB,QAE3B,KAEV,IAAK,mBACH,OAAOqB,OAAAC,EAAA,EAAAD,CAAA,GACFR,EADL,CAEEhB,YAAY,EACZC,WAAWuB,OAAAC,EAAA,EAAAD,CAAA,GACNR,EAAMf,WADD,CAERI,QAAQ,KAEPW,EAAMV,YAPX,CAQEA,YAAYkB,OAAAC,EAAA,EAAAD,CAAA,GACPR,EAAMV,cAERU,EAAMR,YAXX,CAYEA,YAAYgB,OAAAC,EAAA,EAAAD,CAAA,GACPR,EAAMR,eAGf,IAAK,WACH,OAAOgB,OAAAC,EAAA,EAAAD,CAAA,GACFR,EACAA,EAAMV,YAFX,CAGEA,YAAYkB,OAAAC,EAAA,EAAAD,CAAA,GACPR,EAAMV,YADA,CAETF,MAAOY,EAAMV,YAAYF,MAAQ,EACjCG,OAAQS,EAAMV,YAAYC,OAAS,KAElCS,EAAMR,YARX,CASEA,YAAYgB,OAAAC,EAAA,EAAAD,CAAA,GACPR,EAAMR,YADA,CAETJ,MAAOY,EAAMR,YAAYJ,MAAQ,EACjCG,OAAQS,EAAMR,YAAYD,OAAS,MAGzC,IAAK,YACH,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GACFR,EACAA,EAAMV,YAFX,CAGEA,YAAYkB,OAAAC,EAAA,EAAAD,CAAA,GACPR,EAAMV,YADA,CAETC,OAAQ,KAEPS,EAAMR,YAPX,CAQEA,YAAYgB,OAAAC,EAAA,EAAAD,CAAA,GACPR,EAAMR,YADA,CAETD,OAAQ,MAGd,IAAK,gBACH,OAAOiB,OAAAC,EAAA,EAAAD,CAAA,GACFR,EADL,CAEEhB,YAAY,GACTgB,EAAMf,WAHX,CAIEK,YACuB,gBAArBc,EAAOO,UACH,CACEzB,MAAO6B,EACP5B,MAAOiB,EAAOM,QAAQ,GAAGvB,OAE3B,GAENK,YACuB,gBAArBY,EAAOO,UACH,CACEzB,MAAO6B,EACP5B,MAAOiB,EAAOM,QAAQ,GAAGvB,OAE3B,KAEV,QACE,OAAOa,IGtKXgB,MFHa,WAA+B,IAA9BhB,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBnB,EACtB,QAD4CmB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7BE,MACb,IAAK,aAIL,IAAK,cACH,MAAO,CACLZ,aAAcO,EAAMP,aAGxB,QACE,OAAOO,IERXiB,QDAa,WAA+B,IAA9BjB,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBnB,EAAWsB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQC,EAAOC,MACb,IAAK,wBACH,MAAO,CACLX,QAAS,CACPC,mBAAoBS,EAAOM,QAAQhB,QAAQC,mBAAqB,EAChEC,cACEQ,EAAOM,QAAQhB,QAAQC,mBAAqB,IAAM,EAC9C,cACA,cACNE,iBACEO,EAAOM,QAAQhB,QAAQC,mBAAqB,IAAM,EAC9C,cACA,gBAGZ,QACE,OAAOK,yDEGEkB,mLAxBJ,IAAAC,EAGHC,KAAKC,MADPpC,WAAcE,EAFTgC,EAEShC,MAAOE,EAFhB8B,EAEgB9B,OAGvB,OACEiC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAYC,QAAS,IAAKC,GAAIvC,EAAQwC,QAAM,GACzC,SAAA7B,GAAK,OACJsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKM,GAAG,KAAKL,UAAS,0BAAAM,OAA4B/B,IAChDsB,EAAAC,EAAAC,cAAA,OAAKQ,IAAK7C,EAAO8C,IAAI,kBAdlBC,aCgBNC,mLAhBJ,IAAAC,EAGHhB,KAAKC,MADP/B,YAAeJ,EAFVkD,EAEUlD,MAAOC,EAFjBiD,EAEiBjD,MAExB,OACEmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWvC,EAAQ,wBAA0B,iBAChDoC,EAAAC,EAAAC,cAAA,OAAKQ,IAAK7C,EAAO8C,IAAI,MAEvBX,EAAAC,EAAAC,cAAA,oBAAYtC,WAXEgD,aCkBPG,EAlBU,SAAAhB,GAAS,IAAAiB,EACCjB,EAAM/B,YAA/BF,EADwBkD,EACxBlD,MAAOG,EADiB+C,EACjB/C,OAETgD,EAH0BD,EACTpD,MAGrBoC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWpC,GACXkC,EAAAC,EAAAC,cAAA,4BAAoBjC,IAEpB,KAEJ,OACE+B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACCe,ICSQJ,mLArBJ,IAAAK,EAGHpB,KAAKC,MADP7B,YAAeN,EAFVsD,EAEUtD,MAAOC,EAFjBqD,EAEiBrD,MAExB,OACEmC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAWvC,EAAQ,wBAA0B,iBAChDoC,EAAAC,EAAAC,cAAA,OAAKQ,IAAK7C,EAAO8C,IAAI,MAEvBX,EAAAC,EAAAC,cAAA,oBAAYtC,WAXEgD,aCkBPO,EAlBU,SAAApB,GAAS,IAAAqB,EACCrB,EAAM7B,YAA/BJ,EADwBsD,EACxBtD,MAAOG,EADiBmD,EACjBnD,OAETgD,EAH0BG,EACTxD,MAGrBoC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mBAAWpC,GACXkC,EAAAC,EAAAC,cAAA,4BAAoBjC,IAEpB,KAEJ,OACE+B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACCe,qBCSMI,EAAa,WACxB,MAAO,CACLtC,KAAM,gBCaKuC,cAPS,SAAA5C,GACtB,MAAO,CACLgB,MAAOhB,EAAMgB,MACbtB,QAASM,EAAMiB,UAMjB,CAAE0B,cAFWC,CAlCK,SAAAvB,GAAS,IAEzBsB,EAGEtB,EAHFsB,WACAE,EAEExB,EAFFwB,mBACSpD,EACP4B,EADFL,MAASvB,YAGX,OACE6B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CAAOE,UAAU,QAAQsB,OAAQtD,EAAauD,aAAa,GACzD1B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,UACEC,UAAU,8BACVwB,QAAS,kBAAMJ,EAAmBxB,EAAM3B,WAF1C,UAMA4B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAAiBwB,QAAS,kBAAMN,MAC9CrB,EAAAC,EAAAC,cAAA,2FCNN0B,cACJ,SAAAA,EAAY7B,GAAO,IAAA8B,EAAA,OAAA3C,OAAA4C,EAAA,EAAA5C,CAAAY,KAAA8B,IACjBC,EAAA3C,OAAA6C,EAAA,EAAA7C,CAAAY,KAAAZ,OAAA8C,EAAA,EAAA9C,CAAA0C,GAAAK,KAAAnC,KAAMC,KACDwB,mBAAqBM,EAAKN,mBAAmBW,KAAxBhD,OAAAiD,EAAA,EAAAjD,CAAA2C,IAFTA,mFAKjB/B,KAAKxB,cAAgBwB,KAAKC,MAAM3B,QAAQA,QAAQE,cAChDwB,KAAKC,MAAMqC,aAAatC,KAAKxB,4DAG7BwB,KAAKxB,cAAgBwB,KAAKC,MAAM3B,QAAQA,QAAQE,kDAGhDwB,KAAKxB,cAAgBwB,KAAKC,MAAM3B,QAAQA,QAAQE,cAChDwB,KAAKuC,cAAcvC,KAAKxB,eACxBwB,KAAKC,MAAMuC,WAAWxC,KAAKC,MAAMwC,OAAQzC,KAAKxB,qDAElCkE,GACmB,IAA3B1C,KAAKC,MAAMyC,GAAKvE,QAAgB6B,KAAKC,MAAMyC,GAAKvE,OAAS,IAAM,GACjE6B,KAAK2C,4DAIQC,EAAapD,GAC5BQ,KAAK6C,iBAEDrD,IAAcoD,EAChB5C,KAAK8C,aACItD,EAAYoD,EACrB5C,KAAK+C,gBAEL/C,KAAKgD,yDAIOJ,EAAapD,GAC3BQ,KAAK6C,iBAEDrD,IAAcoD,EAChB5C,KAAK8C,aACItD,EAAYoD,EACrB5C,KAAK+C,gBAEL/C,KAAKgD,0DAKPhD,KAAKC,MAAM4C,yDAGX7C,KAAKC,MAAMgD,mDAGXjD,KAAKC,MAAMiD,sDAGMC,GACjBnD,KAAKC,MAAMmD,aAAaD,GACxBnD,KAAKC,MAAMoD,cAAcF,EAAK7E,QAAQE,eACtCwB,KAAKC,MAAMsB,aACXvB,KAAKC,MAAMqC,aAAatC,KAAKxB,gGAO7BwB,KAAKC,MAAMqD,6CAGJ,IAAAC,EAAAvD,KACDxB,EAAkBwB,KAAKC,MAAM3B,QAAQA,QAArCE,cACN,OACE0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACoD,EAAD,CAAkBtF,YAAa8B,KAAKC,MAAM/B,cAC1CgC,EAAAC,EAAAC,cAACqD,EAAD,CAAQ5F,WAAYmC,KAAKC,MAAMpC,aAC/BqC,EAAAC,EAAAC,cAACsD,EAAD,CAAkBtF,YAAa4B,KAAKC,MAAM7B,eAG1C4B,KAAKC,MAAMrC,WAIT,KAHFsC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcwB,QAAS,kBAAM0B,EAAKI,cAApD,cAKFzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAACwD,EAAD,CAAS1F,YAAa8B,KAAKC,MAAM/B,eAEnCgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,OACEC,UACEL,KAAKC,MAAMrC,WACP,yBACA,yBAGNsC,EAAAC,EAAAC,cAAA,UACEC,UAAU,qBACVwB,QAAS,kBACP0B,EAAKM,gBACHN,EAAKtD,MAAMpC,WAAWC,MACtByF,EAAKtD,MAAMzB,GAAeV,SALhC,OAWAoC,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACVwB,QAAS,kBACP0B,EAAKO,iBACHP,EAAKtD,MAAMpC,WAAWC,MACtByF,EAAKtD,MAAMzB,GAAeV,SALhC,UAcJoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAC2D,EAAD,CAAS3F,YAAa4B,KAAKC,MAAM7B,gBAGrC8B,EAAAC,EAAAC,cAAC4D,EAAD,CAAavC,mBAAoBzB,KAAKyB,6BAhI3BX,aAiJJU,cAXS,SAAA5C,GACtB,MAAO,CACLhB,WAAYgB,EAAMD,KAAKf,WACvB6E,OAAQ7D,EAAMD,KAAKhB,OACnBE,WAAYe,EAAMD,KAAKd,WACvBS,QAASM,EAAMiB,QACf3B,YAAaU,EAAMD,KAAKT,YACxBE,YAAaQ,EAAMD,KAAKP,cAM1B,CACEoE,WCtJsB,SAAC7E,EAAQW,GAAT,sBAAA2F,EAAA7E,OAAA8E,EAAA,EAAA9E,CAAA+E,EAAAhE,EAAAiE,KAAqB,SAAAC,EAAMC,GAAN,OAAAH,EAAAhE,EAAAoE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACvCC,IACHC,IADG,uCAAAjE,OAEqChD,EAFrC,2BAKHkH,KAAK,WAA8B,IAAnBC,GAAmBjG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,IAApBkG,KAAQD,MACfR,EAAS,CACPrF,KAAM,cACNK,QAASwF,EACTvF,UAAWjB,MAV4B,wBAAAkG,EAAAQ,SAAAX,MAArB,gBAAAY,GAAA,OAAAhB,EAAAiB,MAAAlF,KAAAnB,YAAA,IDuJtByD,aCtKwB,SAAA6C,GAAa,sBAAAC,EAAAhG,OAAA8E,EAAA,EAAA9E,CAAA+E,EAAAhE,EAAAiE,KAAI,SAAAiB,EAAMf,GAAN,OAAAH,EAAAhE,EAAAoE,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACrCC,IACHC,IADG,uFAKHC,KAAK,SAAAU,GAA2B,IAAhBC,EAAgBD,EAAxBR,KAAQS,QACflB,EAAS,CACPrF,KAAM,iBACNK,QAASkG,EACTjG,UAAW4F,MAV0B,wBAAAG,EAAAN,SAAAK,MAAJ,gBAAAI,GAAA,OAAAL,EAAAF,MAAAlF,KAAAnB,YAAA,IDuKrCoE,QFzKmB,WACrB,MAAO,CACLhE,KAAM,aEwKNiE,SFpKoB,WACtB,MAAO,CACLjE,KAAM,cEmKN4D,eF/J0B,WAC5B,MAAO,CACL5D,KAAM,qBE8JNqE,UF1JqB,WACvB,MAAO,CACLrE,KAAM,eEyJNsC,aACA6B,aFhJwB,SAAAsC,GAC1B,MAAO,CACLzG,KAAM,wBACNK,QAASoG,IE8ITrC,cF1IyB,SAAA/D,GAC3B,MAAO,CACLL,KAAM,gBACNK,QAASA,KE4HEkC,CAabM,GEtKa6D,MARf,WACE,OACEzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwF,EAAD,gBCGAC,EAAQC,YAAYC,EAAUC,YAAgBC,MACpDC,IAASC,OACPjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUP,MAAOA,GACf3F,EAAAC,EAAAC,cAACiG,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.16fd0920.chunk.js","sourcesContent":["///Default is player1\nconst initState = {\n  deckId: null,\n  inProgress: false,\n  dealerCard: {\n    value: \"\",\n    image: \"\",\n    score: 0,\n    inProp: false\n  },\n  player1Card: {\n    value: \"\",\n    image: \"\",\n    score: 0,\n    streak: 2\n  },\n  player2Card: {\n    value: \"\",\n    image: \"\",\n    score: 0,\n    streak: 2\n  }\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case \"FETCH_NEW_DECK\":\n      console.log(\"fetched new deck\");\n      return {\n        ...state,\n        deckId: action.payload,\n        dealerCard: {\n          value: action.payload[0].value,\n          image: action.payload[0].image\n        },\n\n        player1Card:\n          action.otherload === \"player1Card\"\n            ? {\n                ...state.player1Card,\n                value: action.payload[1].value,\n                image: action.payload[1].image\n              }\n            : { ...initState.player1Card },\n\n        player2Card:\n          action.otherload === \"player2Card\"\n            ? {\n                ...state.player2Card,\n                value: action.payload[1].value,\n                image: action.payload[1].image\n              }\n            : { ...initState.player2Card }\n      };\n\n    case \"FETCH_CARDS\":\n      console.log(\"FETCH_CARDS\");\n      let { value } = action.payload[0];\n      let cardValue =\n        value === \"JACK\" ||\n        value === \"QUEEN\" ||\n        value === \"KING\" ||\n        value === \"ACE\"\n          ? 10\n          : parseInt(value);\n\n      /// need to refactor\n      let { value: playerValue } = action.payload[1];\n      let playerCardValue =\n        playerValue === \"JACK\" ||\n        playerValue === \"QUEEN\" ||\n        playerValue === \"KING\" ||\n        playerValue === \"ACE\"\n          ? 10\n          : parseInt(playerValue);\n\n      return {\n        ...state,\n        inProgress: true,\n        dealerCard: {\n          ...state.dealerCard,\n          value: cardValue,\n          image: action.payload[0].image,\n          inProp: false\n        },\n\n        player1Card:\n          action.otherload === \"player1Card\"\n            ? {\n                ...state.player1Card,\n                value: playerCardValue,\n                image: action.payload[1].image\n              }\n            : {},\n\n        player2Card:\n          action.otherload === \"player2Card\"\n            ? {\n                ...state.player2Card,\n                value: playerCardValue,\n                image: action.payload[1].image\n              }\n            : {}\n      };\n    case \"SHOW_DEALER_CARD\":\n      return {\n        ...state,\n        inProgress: false,\n        dealerCard: {\n          ...state.dealerCard,\n          inProp: true\n        },\n        ...state.player1Card,\n        player1Card: {\n          ...state.player1Card\n        },\n        ...state.player2Card,\n        player2Card: {\n          ...state.player2Card\n        }\n      };\n    case \"WON_HAND\":\n      return {\n        ...state,\n        ...state.player1Card,\n        player1Card: {\n          ...state.player1Card,\n          score: state.player1Card.score + 1,\n          streak: state.player1Card.streak + 1\n        },\n        ...state.player2Card,\n        player2Card: {\n          ...state.player2Card,\n          score: state.player2Card.score + 1,\n          streak: state.player2Card.streak + 1\n        }\n      };\n    case \"LOST_HAND\":\n      return {\n        ...state,\n        ...state.player1Card,\n        player1Card: {\n          ...state.player1Card,\n          streak: 0\n        },\n        ...state.player2Card,\n        player2Card: {\n          ...state.player2Card,\n          streak: 0\n        }\n      };\n    case \"SWITCH_PLAYER\":\n      return {\n        ...state,\n        inProgress: false,\n        ...state.dealerCard,\n        player1Card:\n          action.otherload === \"player1Card\"\n            ? {\n                value: playerCardValue,\n                image: action.payload[1].image\n              }\n            : {},\n\n        player2Card:\n          action.otherload === \"player2Card\"\n            ? {\n                value: playerCardValue,\n                image: action.payload[1].image\n              }\n            : {}\n      };\n    default:\n      return state;\n  }\n};\n","const initState = {\n  modalIsOpen: false\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case \"OPEN_MODAL\":\n      return {\n        modalIsOpen: !state.modalIsOpen\n      };\n    case \"CLOSE_MODAL\":\n      return {\n        modalIsOpen: !state.modalIsOpen\n      };\n\n    default:\n      return state;\n  }\n};\n","const initState = {\n  current: {\n    currentPlayerCount: 2,\n    currentPlayer: \"player1Card\",\n    nonCurrentPlayer: \"player2Card\"\n  }\n};\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case \"SWITCH_CURRENT_PLAYER\":\n      return {\n        current: {\n          currentPlayerCount: action.payload.current.currentPlayerCount + 1,\n          currentPlayer:\n            action.payload.current.currentPlayerCount % 2 === 0\n              ? \"player2Card\"\n              : \"player1Card\",\n          nonCurrentPlayer:\n            action.payload.current.currentPlayerCount % 2 === 0\n              ? \"player1Card\"\n              : \"player2Card\"\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport gameReducer from \"./gameReducer\";\nimport modalReducer from \"./modalReducer\";\nimport playerReducer from \"./playersReducer\";\n\nexport default combineReducers({\n  game: gameReducer,\n  modal: modalReducer,\n  players: playerReducer\n});\n","import React, { Component } from \"react\";\nimport { Transition } from \"react-transition-group\";\n\nclass Dealer extends Component {\n  render() {\n    const {\n      dealerCard: { image, inProp }\n    } = this.props;\n\n    return (\n      <div className=\"dealerStyle\">\n        <h1>Dealer</h1>\n        <div>\n          <Transition timeout={400} in={inProp} appear>\n            {state => (\n              <div className=\"cardBorderBox\">\n                <div id=\"me\" className={`dealerCard  dealerCard-${state}`}>\n                  <img src={image} alt=\"\" />\n                </div>\n              </div>\n            )}\n          </Transition>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dealer;\n","import React, { Component } from \"react\";\n\nclass Player1 extends Component {\n  render() {\n    const {\n      player1Card: { value, image }\n    } = this.props;\n    return (\n      <div>\n        <h1>Player 1</h1>\n        <div className={value ? \"cardBorderBox__active\" : \"cardBorderBox\"}>\n          <img src={image} alt=\"\" />\n        </div>\n        <h4>Value: {value}</h4>\n      </div>\n    );\n  }\n}\n\nexport default Player1;\n","import React from \"react\";\n\nconst Player1ScoreCard = props => {\n  const { score, streak, value } = props.player1Card;\n\n  const scoreCard = value ? (\n    <div>\n      <h3>Score:{score}</h3>\n      <h3>Winning Streak:{streak}</h3>\n    </div>\n  ) : null;\n\n  return (\n    <div>\n      <h1>Player 1</h1>\n      {scoreCard}\n    </div>\n  );\n};\n\nexport default Player1ScoreCard;\n","import React, { Component } from \"react\";\n\nclass Player1 extends Component {\n  render() {\n    const {\n      player2Card: { value, image }\n    } = this.props;\n    return (\n      <div>\n        <h1>Player 2</h1>\n        <div className={value ? \"cardBorderBox__active\" : \"cardBorderBox\"}>\n          <img src={image} alt=\"\" />\n        </div>\n        <h4>Value: {value}</h4>\n      </div>\n    );\n  }\n}\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     handleHighChoice: () => dispatch({ type: \"HIGH_CHOICE\" })\n//   };\n// };\n\nexport default Player1;\n","import React from \"react\";\n\nconst Player2ScoreCard = props => {\n  const { score, streak, value } = props.player2Card;\n\n  const scoreCard = value ? (\n    <div>\n      <h3>Score:{score}</h3>\n      <h3>Winning Streak:{streak}</h3>\n    </div>\n  ) : null;\n\n  return (\n    <div>\n      <h1>Player 2</h1>\n      {scoreCard}\n    </div>\n  );\n};\n\nexport default Player2ScoreCard;\n","export const wonHand = () => {\n  return {\n    type: \"WON_HAND\"\n  };\n};\n\nexport const lostHand = () => {\n  return {\n    type: \"LOST_HAND\"\n  };\n};\n\nexport const showDealerCard = () => {\n  return {\n    type: \"SHOW_DEALER_CARD\"\n  };\n};\n\nexport const showModal = () => {\n  return {\n    type: \"OPEN_MODAL\"\n  };\n};\n\nexport const closeModal = () => {\n  return {\n    type: \"CLOSE_MODAL\"\n  };\n};\n\nexport const switchPlayer = payload1 => {\n  return {\n    type: \"SWITCH_CURRENT_PLAYER\",\n    payload: payload1\n  };\n};\n\nexport const switchCounter = payload => {\n  return {\n    type: \"SWITCH_PLAYER\",\n    payload: payload\n  };\n};\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { connect } from \"react-redux\";\nimport { closeModal } from \"../actions/action\";\n\nconst ResultModal = props => {\n  const {\n    closeModal,\n    handleSwitchPlayer,\n    modal: { modalIsOpen }\n  } = props;\n\n  return (\n    <div>\n      <Modal className=\"modal\" isOpen={modalIsOpen} ariaHideApp={false}>\n        <div>\n          <h1>THREE-IN-A-ROW!</h1>\n          <h2>SWITCH TO ANOTHER PLAYER</h2>\n          <button\n            className=\"button button__switchPlayer\"\n            onClick={() => handleSwitchPlayer(props.current)}\n          >\n            SWITCH\n          </button>\n          <span className=\"cancel__switch\" onClick={() => closeModal()}>\n            <p>No, continue as current player</p>\n          </span>\n        </div>\n      </Modal>\n    </div>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    modal: state.modal,\n    current: state.players\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { closeModal }\n)(ResultModal);\n","import React, { Component } from \"react\";\nimport Dealer from \"./Dealer\";\nimport Player1 from \"./Player1\";\nimport Player1ScoreCard from \"./Player1ScoreCard\";\nimport Player2 from \"./Player2\";\nimport Player2ScoreCard from \"./Player2ScoreCard\";\nimport ResultModal from \"./Modal\";\nimport { connect } from \"react-redux\";\nimport { fetchCards, fetchNewDeck } from \"../actions/asynactions\";\nimport {\n  wonHand,\n  lostHand,\n  showDealerCard,\n  showModal,\n  closeModal,\n  switchPlayer,\n  switchCounter\n} from \"../actions/action\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.handleSwitchPlayer = this.handleSwitchPlayer.bind(this);\n  }\n  componentDidMount() {\n    this.currentPlayer = this.props.current.current.currentPlayer;\n    this.props.fetchNewDeck(this.currentPlayer);\n  }\n  componentDidUpdate() {\n    this.currentPlayer = this.props.current.current.currentPlayer;\n  }\n  dealCards() {\n    this.currentPlayer = this.props.current.current.currentPlayer;\n    this.checkThreeRow(this.currentPlayer);\n    this.props.fetchCards(this.props.gameId, this.currentPlayer);\n  }\n  checkThreeRow(arg) {\n    if (this.props[arg].streak !== 0 && this.props[arg].streak % 3 === 0) {\n      this.handleThreeInRoW();\n    }\n  }\n\n  handleHighChoice(dealerValue, cardValue) {\n    this.showDealerCard();\n\n    if (cardValue === dealerValue) {\n      this.handleDraw();\n    } else if (cardValue < dealerValue) {\n      this.handleWonHand();\n    } else {\n      this.handleLostHand();\n    }\n  }\n\n  handleLowChoice(dealerValue, cardValue) {\n    this.showDealerCard();\n\n    if (cardValue === dealerValue) {\n      this.handleDraw();\n    } else if (cardValue > dealerValue) {\n      this.handleWonHand();\n    } else {\n      this.handleLostHand();\n    }\n  }\n\n  showDealerCard() {\n    this.props.showDealerCard();\n  }\n  handleWonHand() {\n    this.props.wonHand();\n  }\n  handleLostHand() {\n    this.props.lostHand();\n  }\n\n  handleSwitchPlayer(load) {\n    this.props.switchPlayer(load);\n    this.props.switchCounter(load.current.currentPlayer);\n    this.props.closeModal();\n    this.props.fetchNewDeck(this.currentPlayer);\n  }\n\n  handleDraw() {\n    // alert(\"draw\");\n  }\n  handleThreeInRoW() {\n    this.props.showModal();\n  }\n\n  render() {\n    let { currentPlayer } = this.props.current.current;\n    return (\n      <div className=\"center\">\n        <div className=\"topDisplay\">\n          <Player1ScoreCard player1Card={this.props.player1Card} />\n          <Dealer dealerCard={this.props.dealerCard} />\n          <Player2ScoreCard player2Card={this.props.player2Card} />\n        </div>\n\n        {!this.props.inProgress ? (\n          <button className=\"dealCardBtn\" onClick={() => this.dealCards()}>\n            DEAL CARDS\n          </button>\n        ) : null}\n\n        <div className=\"playersSection\">\n          <div className=\"player player1Position\">\n            <Player1 player1Card={this.props.player1Card} />\n          </div>\n          <div className=\"player buttonSection\">\n            <div\n              className={\n                this.props.inProgress\n                  ? \"buttonSection__Visible\"\n                  : \"buttonSection__Hidden\"\n              }\n            >\n              <button\n                className=\"button low__button\"\n                onClick={() =>\n                  this.handleLowChoice(\n                    this.props.dealerCard.value,\n                    this.props[currentPlayer].value\n                  )\n                }\n              >\n                LOW\n              </button>\n              <button\n                className=\"button high__button\"\n                onClick={() =>\n                  this.handleHighChoice(\n                    this.props.dealerCard.value,\n                    this.props[currentPlayer].value\n                    /* this.props.player1Card.value */\n                  )\n                }\n              >\n                HIGH\n              </button>\n            </div>\n          </div>\n          <div className=\"player player2Position\">\n            <Player2 player2Card={this.props.player2Card} />\n          </div>\n        </div>\n        <ResultModal handleSwitchPlayer={this.handleSwitchPlayer} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    inProgress: state.game.inProgress,\n    gameId: state.game.deckId,\n    dealerCard: state.game.dealerCard,\n    current: state.players,\n    player1Card: state.game.player1Card,\n    player2Card: state.game.player2Card\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchCards,\n    fetchNewDeck,\n    wonHand,\n    lostHand,\n    showDealerCard,\n    showModal,\n    closeModal,\n    switchPlayer,\n    switchCounter\n  }\n)(Game);\n","import axios from \"axios\";\n\nexport const fetchNewDeck = defaultPlayer => async dispatch => {\n  await axios\n    .get(\n      `https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\n                    `\n    )\n    .then(({ data: { deck_id } }) => {\n      dispatch({\n        type: \"FETCH_NEW_DECK\",\n        payload: deck_id,\n        otherload: defaultPlayer\n      });\n    });\n};\n\nexport const fetchCards = (deckId, current) => async dispatch => {\n  await axios\n    .get(\n      `https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=2\n      `\n    )\n    .then(({ data: { cards } } = {}) => {\n      dispatch({\n        type: \"FETCH_CARDS\",\n        payload: cards,\n        otherload: current\n      });\n    });\n  //\n};\n","import React from \"react\";\nimport Game from \"./Game\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers/reducers\";\nimport App from \"./components/App\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}